{"version":3,"sources":["components/NavMenu.js","components/Layout.js","App.js","registerServiceWorker.js","components/Home.js","components/FetchData.js","components/Counter.js","components/Contact.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","Home","FetchData","forecasts","loading","populateWeatherData","contents","renderForecastsTable","id","a","fetch","response","json","data","map","forecast","date","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","Contact","class","title","src","width","height","style","border","allowfullscreen","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","exact","path","component","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a59f4549.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3 bg-dark\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\"></NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-white px-5\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-white px-5\" to=\"/counter\">Counter</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-white px-5\" to=\"/fetch-data\">Fetch data</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink tag={Link} className=\"text-white px-5\" to=\"/Contact\">Contact Us</NavLink>\r\n                            </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Layout } from './components/Layout';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        \r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Hello, world!</h1>\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Contact extends Component {\r\n    static displayName = Contact.name;\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <body>\r\n                <h1>Contact Page</h1>\r\n                    <div class=\"card\">\r\n                        <h1>Address</h1>\r\n                        <div class=\"card-body\">\r\n                            <iframe title=\"new project\" src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3887.0799732708088!2d77.56268501482263!3d13.030579090817218!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3bae17dedd4dcca9%3A0x6075bd8d8aed97ab!2sRamaiah%20Institute%20Of%20Technology!5e0!3m2!1sen!2sin!4v1640671344925!5m2!1sen!2sin\" width=\"200\" height=\"200\" style={{ border: 0 }} allowfullscreen=\"\" loading=\"lazy\"></iframe>\r\n                    </div>\r\n                    </div>\r\n                </body>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter , Route } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { Home } from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\nimport { Contact } from './components/Contact';\r\n\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n        <App />\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/counter' component={Counter} />\r\n        <Route path='/fetch-data' component={FetchData} />\r\n        <Route path='/Contact' component={Contact} />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}